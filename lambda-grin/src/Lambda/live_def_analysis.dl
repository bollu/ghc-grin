.symbol_type Name

// input fatcs
.decl ConGroup(group:Name, con:Name)
.input ConGroup

.decl ConReference(def:Name, con:Name)
.input ConReference

.decl DefReference(def:Name, ref:Name)
.input DefReference

.decl LiveSource(name:Name)
.input LiveSource

// output fatcs
.decl LiveDefName(name:Name)
.output LiveDefName

.decl LiveGroupName(group:Name)
.output LiveGroupName

// internal fatcs
.decl LiveConName(con:Name)

// calculate live defs
LiveDefName(n) :-
  LiveSource(n).

LiveDefName(ref) :-
  DefReference(n, ref),
  LiveDefName(n).

// calcualte live cons
LiveConName(n) :-
  LiveSource(n).

LiveConName(con) :-
  ConReference(def, con),
  LiveDefName(def).

// caculate live con groups
LiveGroupName(group) :-
  ConGroup(group, con),
  LiveConName(con).
